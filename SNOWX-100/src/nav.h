#include <Arduino.h>
#include <GeoPosition.h>
#define TOTAL_POINTS 72
double points[TOTAL_POINTS][4] = {
{48.840882,-94.722154,-31,1},
{48.839475,-94.717353,-23,1},
{48.838545,-94.716282,18,1},
{48.837418,-94.712296,18,1},
{48.837428,-94.712218,73,1},
{48.837553,-94.704816,-63,1},
{48.841997,-94.740531,17,1},
{48.84198,-94.739006,71,1},
{48.842177,-94.738901,-26,1},
{48.842761,-94.737995,-46,1},
{48.842315,-94.735293,-19,1},
{48.842225,-94.7351,33,1},
{48.842123,-94.764754,-23,1},
{48.841829,-94.757449,19,1},
{48.842861,-94.750606,-65,1},
{48.84157,-94.749879,73,1},
{48.841607,-94.74882,23,1},
{48.842322,-94.746865,-55,1},
{48.84214,-94.746156,20,1},
{48.842099,-94.744175,-24,1},
{48.841708,-94.742603,35,1},
{48.848111,-94.77268,-17,1},
{48.843331,-94.76984,25,1},
{48.842799,-94.769214,40,1},
{48.851749,-94.789727,-21,1},
{48.851079,-94.786835,-26,1},
{48.848487,-94.783033,115,1},
{48.849809,-94.818958,28,1},
{48.849943,-94.818717,25,1},
{48.850047,-94.818643,19,1},
{48.850749,-94.818442,-31,1},
{48.851544,-94.817233,-18,1},
{48.851829,-94.816438,30,1},
{48.852382,-94.815923,-35,1},
{48.852549,-94.815375,-43,1},
{48.852517,-94.815214,22,1},
{48.852551,-94.814636,16,1},
{48.852639,-94.814281,24,1},
{48.852775,-94.814072,-17,1},
{48.852865,-94.813808,-22,1},
{48.852981,-94.812523,-26,1},
{48.852899,-94.812047,33,1},
{48.85295,-94.811816,17,1},
{48.853545,-94.810393,43,1},
{48.844414,-94.846187,-19,1},
{48.844531,-94.842246,19,1},
{48.844546,-94.842202,-42,1},
{48.844374,-94.841185,53,1},
{48.844476,-94.840985,-26,1},
{48.844477,-94.82858,93,1},
{48.844477,-94.82858,-91,1},
{48.844485,-94.827951,93,1},
{48.848723,-94.825431,19,1},
{48.87006,-94.87448,-15,1},
{48.87006,-94.874438,-40,1},
{48.870035,-94.874393,-47,1},
{48.869995,-94.87439,348,1},
{48.869845,-94.874414,-357,1},
{48.864455,-94.86764,16,1},
{48.862573,-94.860294,-15,1},
{48.859464,-94.857262,357,1},
{48.855617,-94.85876,-343,1},
{48.855582,-94.858748,334,1},
{48.853753,-94.85918,-354,1},
{48.85355,-94.859097,20,1},
{48.917003,-94.891501,336,1},
{48.908494,-94.893029,-357,1},
{48.878129,-94.86362,339,1},
{48.877842,-94.863701,-21,1},
{48.877585,-94.863936,-15,1},
{48.875817,-94.866395,-17,1},
{48.870379,-94.874727,-328,1}
};

GeoPosition current;
GeoPosition temp;

bool inProximity(double lat1, double lon1, double lat2, double lon2) {
    double deltaLat1 = abs(lat2 - lat1);
    double deltaLat2 = abs(lon2 - lon1);
    return (deltaLat1 + deltaLat2) < 0.01;     
}

int findApproachingPOI(double lat, double lon, double course){
    
    current.set(lat, lon);
    for(int idx = 0; idx < TOTAL_POINTS; ++idx)
    {
        temp.set(points[idx][0], points[idx][1]);

        if (inProximity(lat, lon, points[idx][0], points[idx][1]))
        {
            float vector = temp.bearing(current);

            if(abs(vector) < 90 && current.distance(temp) < 30)
                return (int)points[idx][3];
        }

    }

    return -1;
}
